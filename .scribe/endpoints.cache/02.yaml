## Autogenerated by Scribe. DO NOT MODIFY.

name: Comments
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/posts/{post_id}/comments'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      post_id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"created_at":"2024-06-23T13:58:50.000000Z","updated_at":"2024-06-23T13:58:50.000000Z","id":1,"title":"voluptate","user":{"id":2,"name":"Leslie Roob MD"}},{"created_at":"2024-06-23T13:58:50.000000Z","updated_at":"2024-06-23T13:58:50.000000Z","id":2,"title":"sunt","user":{"id":4,"name":"Arely Champlin"}}],"links":{"first":"\/?page=1","last":null,"prev":null,"next":null},"meta":{"current_page":1,"from":1,"path":"\/","per_page":20,"to":2}}'
        headers: []
        description: 'list of comments'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      comment_id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"content":"Facilis aut est quia libero reiciendis eos consequatur. Iste a tempora excepturi iure voluptas numquam et quas. Corrupti quia modi provident doloremque minus odit temporibus.","media":{"url":"","type":null},"user":{"id":1,"name":"Beaulah Gusikowski"},"created_at":"2024-06-23T13:58:50.000000Z"}}'
        headers: []
        description: 'show comment'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{post_id}/comments'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      post_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: laudantium
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"created_at":"2024-06-23T13:58:50.000000Z","updated_at":"2024-06-23T13:58:50.000000Z","id":1,"title":"quasi","user":{"id":2,"name":"Jamarcus Langosh"}}}'
        headers: []
        description: 'new comment'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      comment_id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"created_at":"2024-06-23T13:58:50.000000Z","updated_at":"2024-06-23T13:58:50.000000Z","id":1,"title":"dolores","user":{"id":2,"name":"Mikayla Johnson"}}}'
        headers: []
        description: 'update comment'
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized"}'
        headers: []
        description: 'User cannot update comment that doesnt belong to him.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      comment_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '[]'
        headers: []
        description: 'Comment deleted successfully.'
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized"}'
        headers: []
        description: 'User cannot delete comment that doesnt belong to him.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
